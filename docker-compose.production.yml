# docker-compose.production.yml
# Arquivo específico para produção na VM

version: '3.8'

services:
  # API FastAPI
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: fasitech-api-prod
    expose:
      - "8000"
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=https://www.fasitech.com.br
    env_file:
      - .env.production
    volumes:
      - ./credentials:/app/credentials:ro
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - fasitech-network

  # Streamlit App
  streamlit:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: fasitech-streamlit-prod
    expose:
      - "8501"
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=https://www.fasitech.com.br
    env_file:
      - .env.production
    volumes:
      - ./credentials:/app/credentials:ro
      - ./config:/app/config:ro
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - fasitech-network

  # Nginx Proxy Reverso
  nginx:
    image: nginx:alpine
    container_name: fasitech-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /home/ubuntu/certbot/conf:/etc/nginx/ssl:ro  # Certificados SSL (Certbot)
      - /home/ubuntu/certbot/www:/var/www/certbot:ro  # Para renovação de certificados
    depends_on:
      - api
      - streamlit
    restart: unless-stopped
    networks:
      - fasitech-network

networks:
  fasitech-network:
    driver: bridge