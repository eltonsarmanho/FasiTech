version: '3.8'

services:
  # API FastAPI
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: fasitech-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    volumes:
      - ./credentials:/app/credentials:ro
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - fasitech-network

  # Streamlit App
  streamlit:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: fasitech-streamlit
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
      - API_BASE_URL=http://api:8000  # Usa comunicação interna entre containers
    env_file:
      - .env
    volumes:
      - ./credentials:/app/credentials:ro
      - ./config:/app/config:ro
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - fasitech-network

  # Nginx Proxy Reverso
  nginx:
    image: nginx:alpine
    container_name: fasitech-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - streamlit
    restart: unless-stopped
    networks:
      - fasitech-network

networks:
  fasitech-network:
    driver: bridge